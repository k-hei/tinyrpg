name: Sandbox

on: pull_request

env:
  PYTHON_VERSION: '3.x'

jobs:
  version-increment:
    runs-on: ubuntu-latest
    outputs:
      increment: ${{ steps.determine_increment.outputs.increment }}

    steps:
      - uses: actions/checkout@v3
      - name: Determine increment
        id: determine_increment
        uses: ./.github/workflows/increment
        with:
          commit-message: ${{ github.event.head_commit.message }}

  version-bump:
    runs-on: ubuntu-latest
    needs: version-increment
    if: ${{ needs.version-increment.outputs.increment != 'skip' }}
    outputs:
      version: ${{ steps.version-bump.outputs.new_version }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Bump version
        id: version-bump
        shell: bash
        run: |
          NEW_VERSION=$(python3 bin/bump_version.py ${{ needs.version-increment.outputs.increment }})
          echo "Using new version $NEW_VERSION"
          echo "::set-output name=new_version::$(echo "$NEW_VERSION")"

      # - name: Push new version
      #   run: |
      #     git config --global user.name "Brandon Semilla"
      #     git config --global user.email "semibran@gmail.com"

      #     git add -A
      #     git commit -m ${{ steps.version-bump.outputs.new_version }}
      #     git push

  release:
    runs-on: windows-latest
    needs: version-bump
    env:
      VERSION: ${{ needs.version-bump.outputs.version }}

    steps:
      - name: Print increment
        run: |
          echo "Building version ${{ env.VERSION }}"

      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build application binary
        shell: bash
        run: |
          bin/build.sh

      - name: Zip application binary
        run: |
          Compress-Archive `
            dist/tinyrpg-*.exe `
            dist/tinyrpg-${{ env.VERSION }}.zip

      # - name: Create new release
      #   id: create-release
      #   uses: actions/create-release@v1
      #   with:
      #     tag_name: ${{ env.VERSION }}
      #     release_name: ${{ env.VERSION }}
      #     commitish: master
      #     prerelease: true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload application archive
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create-release.outputs.upload_url }}
      #     asset_path: dist/tinyrpg-${{ env.VERSION }}.zip
      #     asset_name: tinyrpg-${{ env.VERSION }}.zip
      #     asset_content_type: application/zip
